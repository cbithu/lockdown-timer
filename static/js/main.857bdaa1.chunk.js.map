{"version":3,"sources":["components/ProgressBar/ProgressBar.js","components/ProgressBar/index.js","App.js","index.js"],"names":["withStyles","ProgressBar","root","flexGrow","width","barRoot","height","borderRadius","props","classes","percentage","className","LinearProgress","color","variant","value","App","state","day","hour","minute","second","percentage_complete","setInterval","date_now","Date","now","toFixed","delta","Math","abs","days","floor","hours","minutes","seconds","round","setState","this","app","Typography","heading","subHeading","Paper","elevation","paperRoot","countdownTime","countdownTimeVal","paperRootTwo","footer","style","fontSize","React","Component","display","alignItems","flexDirection","justifyContent","fontWeight","marginBottom","textDecoration","textAlign","whiteSpace","backgroundColor","padding","minWidth","borderTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.857bdaa1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n    width: \"90%\"\n  },\n  barRoot: {\n    height: \"7vh\",\n    borderRadius: \"2vh\"\n  }\n};\n\nfunction ProgressBar(props) {\n  const { classes, percentage } = props;\n  return (\n    <div className={classes.root}>\n      <LinearProgress\n        classes={{\n          root: classes.barRoot\n        }}\n        color=\"secondary\"\n        variant=\"determinate\"\n        value={percentage}\n      />\n    </div>\n  );\n}\n\nProgressBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  percentage: PropTypes.number\n};\n\nexport default withStyles(styles)(ProgressBar);\n","import ProgressBar from './ProgressBar';\n\nexport default ProgressBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport ProgressBar from './components/ProgressBar';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nconst styles = () => ({\n  app: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    justifyContent: \"space-around\",\n    height: \"97vh\"\n  },\n  heading: {\n    color: \"#ffffff\",\n    fontWeight: \"bold\",\n    marginBottom: \"10vh\",\n    textDecoration: \"underline\",\n    fontSize: \"5vh\",\n    textAlign: \"center\",\n    whiteSpace: \"unset\"\n  },\n  subHeading: {\n    color: \"#ffffff\",\n    fontWeight: 500,\n    marginBottom: \"1vh\",\n    fontSize: \"3vh\"\n  },\n  paperRoot: {\n    backgroundColor: \"#d3062b\",\n    padding: \"5vh 7vh\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    width: \"70%\",\n    marginBottom: \"10vh\",\n    minWidth: \"30vh\"\n  },\n  paperRootTwo : {\n    backgroundColor: \"#d3062b\",\n    padding: \"1vh 2vh\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    width: \"15%\",\n    marginBottom: \"10vh\",\n    minWidth: \"15vh\"\n  },\n  countdownTime : {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  countdownTimeVal: {\n    color: \"#ffffff\",\n    fontWeight: 900,\n    fontSize: \"3vh\",\n    textAlign: \"center\"\n  },\n  footer: {\n    fontSize: \"2vh\",\n    color: \"#ffffff\",\n    textAlign: \"center\",\n    borderTop: \"1px solid #ffffff\",\n    width: \"100%\"\n  }\n});\n\nclass App extends React.Component {\n  state = {\n    day: null,\n    hour: null,\n    minute: null,\n    second: null,\n    percentage_complete: null\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      let date_start = 1584988200000;\n      let date_future = 1586888999000;\n      let date_now = Date.now();\n      let percentage_complete = (((date_now - date_start) / (date_future - date_start)) * 100).toFixed(4);\n\n      let delta = Math.abs(date_future - date_now) / 1000;\n\n      var days = Math.floor(delta / 86400);\n      delta -= days * 86400;\n\n      var hours = Math.floor(delta / 3600) % 24;\n      delta -= hours * 3600;\n\n      var minutes = Math.floor(delta / 60) % 60;\n      delta -= minutes * 60;\n\n      var seconds = Math.round(delta % 60);\n\n      this.setState({\n        day: days,\n        hour: hours,\n        minute: minutes,\n        second: seconds,\n        percentage_complete\n      })\n    }, 1000)\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { day, hour, minute, second, percentage_complete } = this.state;\n\n    return (\n      <div className={classes.app}>\n        <Typography className={classes.heading}>\n          INDIA LOCKDOWN TIMER\n        </Typography>\n\n        <Typography className={classes.subHeading}>\n          Lockdown will be over in ...\n        </Typography>\n\n        <Paper elevation={3} className={classes.paperRoot}>\n          <div className={classes.countdownTime}>\n            <Typography className={classes.countdownTimeVal}>\n              {day}\n            </Typography>\n            <Typography className={classes.countdownTimeVal}>\n              days\n            </Typography>\n          </div>\n          <div className={classes.countdownTime}>\n            <Typography className={classes.countdownTimeVal}>\n              {hour}\n            </Typography>\n            <Typography className={classes.countdownTimeVal}>\n              hrs\n            </Typography>\n          </div>\n          <div className={classes.countdownTime}>\n            <Typography className={classes.countdownTimeVal}>\n              {minute}\n            </Typography>\n            <Typography className={classes.countdownTimeVal}>\n              mins\n            </Typography>\n          </div>\n          <div className={classes.countdownTime}>\n            <Typography className={classes.countdownTimeVal}>\n              {second}\n            </Typography>\n            <Typography className={classes.countdownTimeVal}>\n              secs\n            </Typography>\n          </div>\n        </Paper>\n\n        <Typography className={classes.subHeading}>\n          Percentage completed ...\n        </Typography>\n\n        <Paper elevation={3} className={classes.paperRootTwo}>\n          <Typography className={classes.countdownTimeVal}>\n            {percentage_complete && percentage_complete + \" %\"}\n          </Typography>\n        </Paper>\n\n        <ProgressBar percentage={percentage_complete} />\n\n        <Typography className={classes.footer}>Built with <FavoriteIcon style={{ color: \"#d3062b\" }} fontSize=\"small\"/> by Chinmay Bithu</Typography>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}